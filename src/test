/*void	load_and_display_image(t_data data)
{
	t_img	*wall;
	int		img_width;
	int		img_height;

	wall = mlx_xpm_file_to_image(data.mlx_ptr, path_wall, &img_width, &img_height);
	(wall)->width = img_width;
	(wall)->height = img_height;
	mlx_put_image_to_window(data.mlx_ptr, data.win_ptr, wall, 0, 0);
}*/

/*void	create_tab(t_data *data, t_img **tab)
{
	*tab[0] = data.tiles.wall;
	*tab[1] = data.tiles.ground;
	*tab[2] = data.tiles.exit;
	*tab[3] = data.tiles.collectible;
	*tab[4] = data.tiles.collected;
	*tab[5] = data.tiles.idle_down;
	*tab[6] = data.tiles.idle_left;
	*tab[7] = data.tiles.idle_right;
	*tab[8] = data.tiles.idle_up;
	*tab[9] = data.tiles.walk_down0;
	*tab[10] = data.tiles.walk_left0;
	*tab[11] = data.tiles.walk_right0;
	*tab[12] = data.tiles.walk_up0;
	*tab[13] = data.tiles.walk_down1;
	*tab[14] = data.tiles.walk_left1;
	*tab[15] = data.tiles.walk_right1;
	*tab[16] = data.tiles.walk_up1;
	*tab[17] = data.tiles.walk_down2;
	*tab[18] = data.tiles.walk_left2;
	*tab[19] = data.tiles.walk_right2;
	*tab[20] = data.tiles.walk_up2;
}*/
	/*t_img	tab[21];
	int		i;
	int		x;
	
	create_tab(data, &tab);
	i = 0;
	x = 0;
	while (tab[i])
	{
		tab[i] = mlx_xpm_file_to_image(data.mlx_ptr, path_ground, &img_width, &img_height);
		(tab[i])->width = img_width;
		(tab[i])->height = img_height;
		mlx_put_image_to_window(data.mlx_ptr, data.win_ptr, tab[i], x, 0);
		x += 64;
		i ++;
	}*/
